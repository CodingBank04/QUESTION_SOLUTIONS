/*
// Definition for a Node.
public class Node {
    public int val;
    public IList<Node> children;

    public Node(){}
    public Node(int _val,IList<Node> _children) {
        val = _val;
        children = _children;
}
*/
public class Solution {
    
    public int MaxDepth(Node root) 
    {
        int ans;
        List<int> list=new List<int>();
        if(root == null)
        { 
            return 0;
        }
        else if(root.children.Count==0 && root.val !=null)
        {
            return 1;
        }
        else
        {
            foreach(Node n in root.children)
            {
                list.Add(MaxDepth(n));
            }
            
        }
        /*foreach(var item in list)
        {
            Console.WriteLine(item);
        }
        */
        return list.Max()+1;
        
    }
   
}
